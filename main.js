(()=>{var t={424:(t,e,n)=>{"use strict";n.d(e,{Z:()=>a});var r=n(537),o=n.n(r),i=n(645),s=n.n(i)()(o());s.push([t.id,"body{\n    background-color: #073A41;\n    color: white;\n}\n\nh1 {\n    text-align: center;\n}","",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;IACI,yBAAyB;IACzB,YAAY;AAChB;;AAEA;IACI,kBAAkB;AACtB",sourcesContent:["body{\n    background-color: #073A41;\n    color: white;\n}\n\nh1 {\n    text-align: center;\n}"],sourceRoot:""}]);const a=s},486:(t,e,n)=>{"use strict";n.d(e,{Z:()=>a});var r=n(537),o=n.n(r),i=n(645),s=n.n(i)()(o());s.push([t.id,".taskDiv {\n    border: 2px solid white;\n    border-radius: 8px;\n    display: flex;\n    align-items: center;\n    gap: 20px;\n    margin-top: 8px;\n    height: 80px\n}\n\n#taskDone {\n    margin: 0px 0px 0px 4px;\n}\n\n#taskTitle {\n    margin-left: -10px;\n    height: 40px;\n    flex-grow: 4;\n    display: flex;\n    align-items: center;\n    border: none;\n    border-radius: 4px;\n}\n\n#taskDateP {\n    width: 130px;\n    /* border: 1px solid white; */\n    text-align: center;\n}\n\n#taskPriP {\n    width: 100px;\n    /* border: 1px solid white; */\n    text-align: center;\n}\n\n.buttons {\n    height: 40px;\n    width: 80px;\n    background-color: greenyellow;\n    border: none;\n    border-radius: 4px;\n    font-weight: bold;\n}\n\n#taskEdit {\n    background-color: greenyellow;\n}\n\n#taskDel {\n    margin-right: 15px;\n    background-color: red;\n}","",{version:3,sources:["webpack://./src/toDoAdd.css"],names:[],mappings:"AAAA;IACI,uBAAuB;IACvB,kBAAkB;IAClB,aAAa;IACb,mBAAmB;IACnB,SAAS;IACT,eAAe;IACf;AACJ;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,kBAAkB;IAClB,YAAY;IACZ,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,6BAA6B;IAC7B,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,6BAA6B;IAC7B,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,6BAA6B;IAC7B,YAAY;IACZ,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA;IACI,6BAA6B;AACjC;;AAEA;IACI,kBAAkB;IAClB,qBAAqB;AACzB",sourcesContent:[".taskDiv {\n    border: 2px solid white;\n    border-radius: 8px;\n    display: flex;\n    align-items: center;\n    gap: 20px;\n    margin-top: 8px;\n    height: 80px\n}\n\n#taskDone {\n    margin: 0px 0px 0px 4px;\n}\n\n#taskTitle {\n    margin-left: -10px;\n    height: 40px;\n    flex-grow: 4;\n    display: flex;\n    align-items: center;\n    border: none;\n    border-radius: 4px;\n}\n\n#taskDateP {\n    width: 130px;\n    /* border: 1px solid white; */\n    text-align: center;\n}\n\n#taskPriP {\n    width: 100px;\n    /* border: 1px solid white; */\n    text-align: center;\n}\n\n.buttons {\n    height: 40px;\n    width: 80px;\n    background-color: greenyellow;\n    border: none;\n    border-radius: 4px;\n    font-weight: bold;\n}\n\n#taskEdit {\n    background-color: greenyellow;\n}\n\n#taskDel {\n    margin-right: 15px;\n    background-color: red;\n}"],sourceRoot:""}]);const a=s},145:(t,e,n)=>{"use strict";n.d(e,{Z:()=>a});var r=n(537),o=n.n(r),i=n(645),s=n.n(i)()(o());s.push([t.id,"#firstFormDiv {\n    display: flex;\n    justify-content: space-between;\n    gap: 20px;\n    /* border: 2px solid yellow; */\n    height: 80px;\n    align-items: center;\n    flex-wrap: wrap;\n    flex-grow: 8;\n}\n\n#title {\n    height: 40px;\n    /* width: 400px; */\n    border: none;\n    margin-left: 15px;\n    border-radius: 4px;\n    /* font-size: 24px; */\n    flex-grow: 4;\n}\n\n#taskDate {\n    height: 40px;\n    border-radius: 4px;\n    border: none;\n    /* font-size: 24px; */\n    /* flex-grow: 1; */\n}\n\n#priority {\n    height: 40px;\n    border: none;\n    border-radius: 4px;\n    /* flex-grow: 1; */\n}\n\n#addBtn {\n    height: 40px;\n    width: 80px;\n    background-color: greenyellow;\n    border: none;\n    border-radius: 4px;\n    font-weight: bold;\n}\n\n#cancelBtn {\n    height: 40px;\n    width: 80px;\n    margin-right: 15px;\n    background-color: red;\n    border: none;\n    border-radius: 4px;\n    font-weight: bold;\n}","",{version:3,sources:["webpack://./src/toDoForm.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,8BAA8B;IAC9B,SAAS;IACT,8BAA8B;IAC9B,YAAY;IACZ,mBAAmB;IACnB,eAAe;IACf,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,kBAAkB;IAClB,YAAY;IACZ,iBAAiB;IACjB,kBAAkB;IAClB,qBAAqB;IACrB,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,kBAAkB;IAClB,YAAY;IACZ,qBAAqB;IACrB,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,kBAAkB;IAClB,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,6BAA6B;IAC7B,YAAY;IACZ,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,qBAAqB;IACrB,YAAY;IACZ,kBAAkB;IAClB,iBAAiB;AACrB",sourcesContent:["#firstFormDiv {\n    display: flex;\n    justify-content: space-between;\n    gap: 20px;\n    /* border: 2px solid yellow; */\n    height: 80px;\n    align-items: center;\n    flex-wrap: wrap;\n    flex-grow: 8;\n}\n\n#title {\n    height: 40px;\n    /* width: 400px; */\n    border: none;\n    margin-left: 15px;\n    border-radius: 4px;\n    /* font-size: 24px; */\n    flex-grow: 4;\n}\n\n#taskDate {\n    height: 40px;\n    border-radius: 4px;\n    border: none;\n    /* font-size: 24px; */\n    /* flex-grow: 1; */\n}\n\n#priority {\n    height: 40px;\n    border: none;\n    border-radius: 4px;\n    /* flex-grow: 1; */\n}\n\n#addBtn {\n    height: 40px;\n    width: 80px;\n    background-color: greenyellow;\n    border: none;\n    border-radius: 4px;\n    font-weight: bold;\n}\n\n#cancelBtn {\n    height: 40px;\n    width: 80px;\n    margin-right: 15px;\n    background-color: red;\n    border: none;\n    border-radius: 4px;\n    font-weight: bold;\n}"],sourceRoot:""}]);const a=s},657:(t,e,n)=>{"use strict";n.d(e,{Z:()=>a});var r=n(537),o=n.n(r),i=n(645),s=n.n(i)()(o());s.push([t.id,"img {\n    height: 80px;\n    width: 80px;\n}\n\n#plusIconDiv {\n    height: 80px;\n    border: 2px solid white;\n    border-radius: 8px;\n    text-align: center;\n    /* background-color: rgb(57, 111, 111); */\n}\n\n","",{version:3,sources:["webpack://./src/toDoToggle.css"],names:[],mappings:"AAAA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,YAAY;IACZ,uBAAuB;IACvB,kBAAkB;IAClB,kBAAkB;IAClB,yCAAyC;AAC7C",sourcesContent:["img {\n    height: 80px;\n    width: 80px;\n}\n\n#plusIconDiv {\n    height: 80px;\n    border: 2px solid white;\n    border-radius: 8px;\n    text-align: center;\n    /* background-color: rgb(57, 111, 111); */\n}\n\n"],sourceRoot:""}]);const a=s},645:t=>{"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",r=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),r&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),r&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,r,o,i){"string"==typeof t&&(t=[[null,t,void 0]]);var s={};if(r)for(var a=0;a<this.length;a++){var A=this[a][0];null!=A&&(s[A]=!0)}for(var c=0;c<t.length;c++){var l=[].concat(t[c]);r&&s[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},537:t=>{"use strict";t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */"),s=n.sources.map((function(t){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(t," */")}));return[e].concat(s).concat([i]).join("\n")}return[e].join("\n")}},379:t=>{"use strict";var e=[];function n(t){for(var n=-1,r=0;r<e.length;r++)if(e[r].identifier===t){n=r;break}return n}function r(t,r){for(var i={},s=[],a=0;a<t.length;a++){var A=t[a],c=r.base?A[0]+r.base:A[0],l=i[c]||0,d="".concat(c," ").concat(l);i[c]=l+1;var u=n(d),p={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var g=o(p,r);r.byIndex=a,e.splice(a,0,{identifier:d,updater:g,references:1})}s.push(d)}return s}function o(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,o){var i=r(t=t||[],o=o||{});return function(t){t=t||[];for(var s=0;s<i.length;s++){var a=n(i[s]);e[a].references--}for(var A=r(t,o),c=0;c<i.length;c++){var l=n(i[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=A}}},569:t=>{"use strict";var e={};t.exports=function(t,n){var r=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:t=>{"use strict";t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{"use strict";t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{"use strict";t.exports=function(t){var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{"use strict";t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},884:()=>{document.addEventListener("click",(t=>{if(t.target.nextSibling&&"taskTitle"===t.target.nextSibling.id&&(t.target.checked?t.target.nextSibling.style.setProperty("text-decoration","line-through"):t.target.nextSibling.style.setProperty("text-decoration","none")),"taskDel"===t.target.id&&t.target.parentNode.remove(),"taskEdit"===t.target.id&&"Edit"===t.target.value){t.target.value="Save",console.log(t.target.previousSibling.textContent);const e=document.createElement("input");e.setAttribute("type","text"),e.setAttribute("id","taskTitle"),e.value=t.target.previousSibling.previousSibling.previousSibling.textContent,t.target.previousSibling.previousSibling.previousSibling.replaceWith(e);const n=document.createElement("input");n.setAttribute("type","date"),n.setAttribute("id","taskDate"),n.setAttribute("value",t.target.previousSibling.previousSibling.textContent),t.target.previousSibling.previousSibling.replaceWith(n);const r=document.createElement("select");r.setAttribute("name","Priority"),r.setAttribute("id","priority");const o=document.createElement("option");o.setAttribute("value","Low"),o.textContent="Low";const i=document.createElement("option");i.setAttribute("value","Medium"),i.textContent="Medium";const s=document.createElement("option");s.setAttribute("value","High"),s.textContent="High",r.append(o,i,s),r.value=t.target.previousSibling.textContent,t.target.previousSibling.replaceWith(r)}}))}},e={};function n(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return t[r](i,i.exports,n),i.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t;n.g.importScripts&&(t=n.g.location+"");var e=n.g.document;if(!t&&e&&(e.currentScript&&(t=e.currentScript.src),!t)){var r=e.getElementsByTagName("script");r.length&&(t=r[r.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=t})(),n.nc=void 0,(()=>{"use strict";const t=n.p+"4e3d60cd93c0f851f657.png";var e=n(379),r=n.n(e),o=n(795),i=n.n(o),s=n(569),a=n.n(s),A=n(565),c=n.n(A),l=n(216),d=n.n(l),u=n(589),p=n.n(u),g=n(657),b={};b.styleTagTransform=p(),b.setAttributes=c(),b.insert=a().bind(null,"head"),b.domAPI=i(),b.insertStyleElement=d(),r()(g.Z,b),g.Z&&g.Z.locals&&g.Z.locals;var m=n(145),h={};h.styleTagTransform=p(),h.setAttributes=c(),h.insert=a().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=d(),r()(m.Z,h),m.Z&&m.Z.locals&&m.Z.locals;const x=document.createElement("div");x.classList.add("taskItemsDiv");const C=document.createElement("form");C.setAttribute("id","qwert");const B=document.createElement("div");B.setAttribute("id","firstFormDiv");const v=document.createElement("input");v.setAttribute("type","text"),v.setAttribute("placeholder","Task Name"),v.setAttribute("id","title");const f=document.createElement("input");f.setAttribute("type","date"),f.setAttribute("id","taskDate");const I=(new Date).toJSON().slice(0,10);f.setAttribute("value",I);const k=document.createElement("select");k.setAttribute("name","Priority"),k.setAttribute("id","priority");const y=document.createElement("option");y.setAttribute("value","Low"),y.textContent="Low";const w=document.createElement("option");w.setAttribute("value","Medium"),w.textContent="Medium";const E=document.createElement("option");E.setAttribute("value","High"),E.textContent="High",k.append(y,w,E);const Y=document.createElement("input");Y.setAttribute("type","submit"),Y.setAttribute("value","Add"),Y.setAttribute("id","addBtn");const Z=document.createElement("input");Z.setAttribute("type","button"),Z.setAttribute("value","Cancel"),Z.setAttribute("id","cancelBtn"),B.append(v,f,k,Y,Z),C.append(B);const S=document.createElement("div");S.setAttribute("id","plusIconDiv");const D=document.createElement("img");D.setAttribute("id","plusIconImg"),D.src=t,D.addEventListener("click",(function(){S.removeChild(D),S.appendChild(C),v.focus()})),S.appendChild(C),Z.addEventListener("click",(()=>{S.removeChild(C),S.appendChild(D)}));var T=n(486),P={};P.styleTagTransform=p(),P.setAttributes=c(),P.insert=a().bind(null,"head"),P.domAPI=i(),P.insertStyleElement=d(),r()(T.Z,P),T.Z&&T.Z.locals&&T.Z.locals;class L{constructor(t,e,n){this.taskName=t,this.taskDate=e,this.taskPriority=n}addToDom(){const t=document.createElement("div");t.classList.add("taskDiv");const e=document.createElement("input");e.setAttribute("type","checkbox"),e.setAttribute("value","done"),e.setAttribute("id","taskDone");const n=document.createElement("p");n.textContent=this.taskName,n.setAttribute("id","taskTitle");const r=document.createElement("p");r.textContent=this.taskDate,r.setAttribute("id","taskDateP");const o=document.createElement("p");o.textContent=this.taskPriority,o.setAttribute("id","taskPriP");const i=document.createElement("input");i.setAttribute("type","button"),i.setAttribute("value","Delete"),i.setAttribute("id","taskDel"),i.classList.add("buttons");const s=document.createElement("input");s.setAttribute("type","button"),s.setAttribute("value","Edit"),s.setAttribute("id","taskEdit"),s.classList.add("buttons"),t.append(e,n,r,o,s,i),x.append(t)}}function j(){const t=v.value;let e=f.value;const n=k.id,r=document.getElementById(n).value;e||(e="No due date"),t&&(new L(t,e,r).addToDom(),v.value="",f.value=I,document.getElementById("priority").value="Low",S.removeChild(C),S.appendChild(D)),console.log(t,e,r)}C.addEventListener("submit",(t=>{t.preventDefault(),j()})),Y.addEventListener("click",(t=>{t.preventDefault(),j()})),new L("Hello! I'm a task.",I,"High").addToDom();const M=x;var N=n(424),q={};q.styleTagTransform=p(),q.setAttributes=c(),q.insert=a().bind(null,"head"),q.domAPI=i(),q.insertStyleElement=d(),r()(N.Z,q),N.Z&&N.Z.locals&&N.Z.locals,n(884);const W=document.querySelector("body"),R=document.createElement("h1");R.textContent="Todo App!",W.appendChild(R),W.appendChild(S),W.appendChild(M)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QWxCLEVBQVF0RCxpQkFBaUIsVUFBV3JCLElBQ2xDQSxFQUFFeUcsaUJBQ0ZILEdBQVMsSUFHWGxCLEVBQWMvRCxpQkFBaUIsU0FBVXJCLElBQ3ZDQSxFQUFFeUcsaUJBQ0ZILEdBQVMsSUFJSSxJQUFJYixFQUFLLHFCQUFzQlYsRUFBVyxRQUNsRGUsV0FFUCxVLGFDakdJLEVBQVUsQ0FBQyxFQUVmLEVBQVFsRixrQkFBb0IsSUFDNUIsRUFBUU4sY0FBZ0IsSUFFbEIsRUFBUWhCLE9BQVMsU0FBYyxLQUFNLFFBRTNDLEVBQVFYLE9BQVMsSUFDakIsRUFBUWdDLG1CQUFxQixJQUVoQixJQUFJLElBQVMsR0FLSixLQUFXLFlBQWlCLFcsT0NyQmxELE1BQU0rRixFQUFPaEgsU0FBU0MsY0FBYyxRQUU5QmdILEVBQUtqSCxTQUFTVyxjQUFjLE1BQ2xDc0csRUFBRzlFLFlBQWMsWUFFakI2RSxFQUFLdkcsWUFBWXdHLEdBQ2pCRCxFQUFLdkcsWUFBWW1GLEdBQ2pCb0IsRUFBS3ZHLFlBQVksRSIsInNvdXJjZXMiOlsid2VicGFjazovL3RoZW9kaW5wcm9qZWN0LXRvZG9saXN0Ly4vc3JjL2luZGV4LmNzcyIsIndlYnBhY2s6Ly90aGVvZGlucHJvamVjdC10b2RvbGlzdC8uL3NyYy90b0RvQWRkLmNzcyIsIndlYnBhY2s6Ly90aGVvZGlucHJvamVjdC10b2RvbGlzdC8uL3NyYy90b0RvRm9ybS5jc3MiLCJ3ZWJwYWNrOi8vdGhlb2RpbnByb2plY3QtdG9kb2xpc3QvLi9zcmMvdG9Eb1RvZ2dsZS5jc3MiLCJ3ZWJwYWNrOi8vdGhlb2RpbnByb2plY3QtdG9kb2xpc3QvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL3RoZW9kaW5wcm9qZWN0LXRvZG9saXN0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vdGhlb2RpbnByb2plY3QtdG9kb2xpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vdGhlb2RpbnByb2plY3QtdG9kb2xpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL3RoZW9kaW5wcm9qZWN0LXRvZG9saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL3RoZW9kaW5wcm9qZWN0LXRvZG9saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL3RoZW9kaW5wcm9qZWN0LXRvZG9saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vdGhlb2RpbnByb2plY3QtdG9kb2xpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly90aGVvZGlucHJvamVjdC10b2RvbGlzdC8uL3NyYy90b0RvRWRpdC5qcyIsIndlYnBhY2s6Ly90aGVvZGlucHJvamVjdC10b2RvbGlzdC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly90aGVvZGlucHJvamVjdC10b2RvbGlzdC93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly90aGVvZGlucHJvamVjdC10b2RvbGlzdC93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vdGhlb2RpbnByb2plY3QtdG9kb2xpc3Qvd2VicGFjay9ydW50aW1lL2dsb2JhbCIsIndlYnBhY2s6Ly90aGVvZGlucHJvamVjdC10b2RvbGlzdC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL3RoZW9kaW5wcm9qZWN0LXRvZG9saXN0L3dlYnBhY2svcnVudGltZS9wdWJsaWNQYXRoIiwid2VicGFjazovL3RoZW9kaW5wcm9qZWN0LXRvZG9saXN0L3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly90aGVvZGlucHJvamVjdC10b2RvbGlzdC8uL3NyYy90b0RvVG9nZ2xlLmNzcz9mNzc3Iiwid2VicGFjazovL3RoZW9kaW5wcm9qZWN0LXRvZG9saXN0Ly4vc3JjL3RvRG9Gb3JtLmNzcz84N2E5Iiwid2VicGFjazovL3RoZW9kaW5wcm9qZWN0LXRvZG9saXN0Ly4vc3JjL3RvRG9Gb3JtLmpzIiwid2VicGFjazovL3RoZW9kaW5wcm9qZWN0LXRvZG9saXN0Ly4vc3JjL3RvRG9Ub2dnbGUuanMiLCJ3ZWJwYWNrOi8vdGhlb2RpbnByb2plY3QtdG9kb2xpc3QvLi9zcmMvdG9Eb0FkZC5jc3M/MmIyYSIsIndlYnBhY2s6Ly90aGVvZGlucHJvamVjdC10b2RvbGlzdC8uL3NyYy90b0RvQWRkLmpzIiwid2VicGFjazovL3RoZW9kaW5wcm9qZWN0LXRvZG9saXN0Ly4vc3JjL2luZGV4LmNzcz9jZmU0Iiwid2VicGFjazovL3RoZW9kaW5wcm9qZWN0LXRvZG9saXN0Ly4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiYm9keXtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzA3M0E0MTtcXG4gICAgY29sb3I6IHdoaXRlO1xcbn1cXG5cXG5oMSB7XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG59XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2luZGV4LmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLHlCQUF5QjtJQUN6QixZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksa0JBQWtCO0FBQ3RCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcImJvZHl7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwNzNBNDE7XFxuICAgIGNvbG9yOiB3aGl0ZTtcXG59XFxuXFxuaDEge1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi50YXNrRGl2IHtcXG4gICAgYm9yZGVyOiAycHggc29saWQgd2hpdGU7XFxuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZ2FwOiAyMHB4O1xcbiAgICBtYXJnaW4tdG9wOiA4cHg7XFxuICAgIGhlaWdodDogODBweFxcbn1cXG5cXG4jdGFza0RvbmUge1xcbiAgICBtYXJnaW46IDBweCAwcHggMHB4IDRweDtcXG59XFxuXFxuI3Rhc2tUaXRsZSB7XFxuICAgIG1hcmdpbi1sZWZ0OiAtMTBweDtcXG4gICAgaGVpZ2h0OiA0MHB4O1xcbiAgICBmbGV4LWdyb3c6IDQ7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xcbn1cXG5cXG4jdGFza0RhdGVQIHtcXG4gICAgd2lkdGg6IDEzMHB4O1xcbiAgICAvKiBib3JkZXI6IDFweCBzb2xpZCB3aGl0ZTsgKi9cXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbn1cXG5cXG4jdGFza1ByaVAge1xcbiAgICB3aWR0aDogMTAwcHg7XFxuICAgIC8qIGJvcmRlcjogMXB4IHNvbGlkIHdoaXRlOyAqL1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxufVxcblxcbi5idXR0b25zIHtcXG4gICAgaGVpZ2h0OiA0MHB4O1xcbiAgICB3aWR0aDogODBweDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ3JlZW55ZWxsb3c7XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xcbiAgICBmb250LXdlaWdodDogYm9sZDtcXG59XFxuXFxuI3Rhc2tFZGl0IHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ3JlZW55ZWxsb3c7XFxufVxcblxcbiN0YXNrRGVsIHtcXG4gICAgbWFyZ2luLXJpZ2h0OiAxNXB4O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy90b0RvQWRkLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLHVCQUF1QjtJQUN2QixrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixTQUFTO0lBQ1QsZUFBZTtJQUNmO0FBQ0o7O0FBRUE7SUFDSSx1QkFBdUI7QUFDM0I7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLFlBQVk7SUFDWixhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLFlBQVk7SUFDWixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNkJBQTZCO0lBQzdCLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLFlBQVk7SUFDWiw2QkFBNkI7SUFDN0Isa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksWUFBWTtJQUNaLFdBQVc7SUFDWCw2QkFBNkI7SUFDN0IsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIscUJBQXFCO0FBQ3pCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi50YXNrRGl2IHtcXG4gICAgYm9yZGVyOiAycHggc29saWQgd2hpdGU7XFxuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZ2FwOiAyMHB4O1xcbiAgICBtYXJnaW4tdG9wOiA4cHg7XFxuICAgIGhlaWdodDogODBweFxcbn1cXG5cXG4jdGFza0RvbmUge1xcbiAgICBtYXJnaW46IDBweCAwcHggMHB4IDRweDtcXG59XFxuXFxuI3Rhc2tUaXRsZSB7XFxuICAgIG1hcmdpbi1sZWZ0OiAtMTBweDtcXG4gICAgaGVpZ2h0OiA0MHB4O1xcbiAgICBmbGV4LWdyb3c6IDQ7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xcbn1cXG5cXG4jdGFza0RhdGVQIHtcXG4gICAgd2lkdGg6IDEzMHB4O1xcbiAgICAvKiBib3JkZXI6IDFweCBzb2xpZCB3aGl0ZTsgKi9cXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbn1cXG5cXG4jdGFza1ByaVAge1xcbiAgICB3aWR0aDogMTAwcHg7XFxuICAgIC8qIGJvcmRlcjogMXB4IHNvbGlkIHdoaXRlOyAqL1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxufVxcblxcbi5idXR0b25zIHtcXG4gICAgaGVpZ2h0OiA0MHB4O1xcbiAgICB3aWR0aDogODBweDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ3JlZW55ZWxsb3c7XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xcbiAgICBmb250LXdlaWdodDogYm9sZDtcXG59XFxuXFxuI3Rhc2tFZGl0IHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ3JlZW55ZWxsb3c7XFxufVxcblxcbiN0YXNrRGVsIHtcXG4gICAgbWFyZ2luLXJpZ2h0OiAxNXB4O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIiNmaXJzdEZvcm1EaXYge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICAgIGdhcDogMjBweDtcXG4gICAgLyogYm9yZGVyOiAycHggc29saWQgeWVsbG93OyAqL1xcbiAgICBoZWlnaHQ6IDgwcHg7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGZsZXgtd3JhcDogd3JhcDtcXG4gICAgZmxleC1ncm93OiA4O1xcbn1cXG5cXG4jdGl0bGUge1xcbiAgICBoZWlnaHQ6IDQwcHg7XFxuICAgIC8qIHdpZHRoOiA0MDBweDsgKi9cXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBtYXJnaW4tbGVmdDogMTVweDtcXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xcbiAgICAvKiBmb250LXNpemU6IDI0cHg7ICovXFxuICAgIGZsZXgtZ3JvdzogNDtcXG59XFxuXFxuI3Rhc2tEYXRlIHtcXG4gICAgaGVpZ2h0OiA0MHB4O1xcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gICAgLyogZm9udC1zaXplOiAyNHB4OyAqL1xcbiAgICAvKiBmbGV4LWdyb3c6IDE7ICovXFxufVxcblxcbiNwcmlvcml0eSB7XFxuICAgIGhlaWdodDogNDBweDtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XFxuICAgIC8qIGZsZXgtZ3JvdzogMTsgKi9cXG59XFxuXFxuI2FkZEJ0biB7XFxuICAgIGhlaWdodDogNDBweDtcXG4gICAgd2lkdGg6IDgwcHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IGdyZWVueWVsbG93O1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxufVxcblxcbiNjYW5jZWxCdG4ge1xcbiAgICBoZWlnaHQ6IDQwcHg7XFxuICAgIHdpZHRoOiA4MHB4O1xcbiAgICBtYXJnaW4tcmlnaHQ6IDE1cHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJlZDtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xcbn1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvdG9Eb0Zvcm0uY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksYUFBYTtJQUNiLDhCQUE4QjtJQUM5QixTQUFTO0lBQ1QsOEJBQThCO0lBQzlCLFlBQVk7SUFDWixtQkFBbUI7SUFDbkIsZUFBZTtJQUNmLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLHFCQUFxQjtJQUNyQixZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1oscUJBQXFCO0lBQ3JCLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLFlBQVk7SUFDWixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsNkJBQTZCO0lBQzdCLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksWUFBWTtJQUNaLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIscUJBQXFCO0lBQ3JCLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsaUJBQWlCO0FBQ3JCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIiNmaXJzdEZvcm1EaXYge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICAgIGdhcDogMjBweDtcXG4gICAgLyogYm9yZGVyOiAycHggc29saWQgeWVsbG93OyAqL1xcbiAgICBoZWlnaHQ6IDgwcHg7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGZsZXgtd3JhcDogd3JhcDtcXG4gICAgZmxleC1ncm93OiA4O1xcbn1cXG5cXG4jdGl0bGUge1xcbiAgICBoZWlnaHQ6IDQwcHg7XFxuICAgIC8qIHdpZHRoOiA0MDBweDsgKi9cXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBtYXJnaW4tbGVmdDogMTVweDtcXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xcbiAgICAvKiBmb250LXNpemU6IDI0cHg7ICovXFxuICAgIGZsZXgtZ3JvdzogNDtcXG59XFxuXFxuI3Rhc2tEYXRlIHtcXG4gICAgaGVpZ2h0OiA0MHB4O1xcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gICAgLyogZm9udC1zaXplOiAyNHB4OyAqL1xcbiAgICAvKiBmbGV4LWdyb3c6IDE7ICovXFxufVxcblxcbiNwcmlvcml0eSB7XFxuICAgIGhlaWdodDogNDBweDtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XFxuICAgIC8qIGZsZXgtZ3JvdzogMTsgKi9cXG59XFxuXFxuI2FkZEJ0biB7XFxuICAgIGhlaWdodDogNDBweDtcXG4gICAgd2lkdGg6IDgwcHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IGdyZWVueWVsbG93O1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxufVxcblxcbiNjYW5jZWxCdG4ge1xcbiAgICBoZWlnaHQ6IDQwcHg7XFxuICAgIHdpZHRoOiA4MHB4O1xcbiAgICBtYXJnaW4tcmlnaHQ6IDE1cHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJlZDtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCJpbWcge1xcbiAgICBoZWlnaHQ6IDgwcHg7XFxuICAgIHdpZHRoOiA4MHB4O1xcbn1cXG5cXG4jcGx1c0ljb25EaXYge1xcbiAgICBoZWlnaHQ6IDgwcHg7XFxuICAgIGJvcmRlcjogMnB4IHNvbGlkIHdoaXRlO1xcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gICAgLyogYmFja2dyb3VuZC1jb2xvcjogcmdiKDU3LCAxMTEsIDExMSk7ICovXFxufVxcblxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy90b0RvVG9nZ2xlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLFlBQVk7SUFDWixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxZQUFZO0lBQ1osdUJBQXVCO0lBQ3ZCLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIseUNBQXlDO0FBQzdDXCIsXCJzb3VyY2VzQ29udGVudFwiOltcImltZyB7XFxuICAgIGhlaWdodDogODBweDtcXG4gICAgd2lkdGg6IDgwcHg7XFxufVxcblxcbiNwbHVzSWNvbkRpdiB7XFxuICAgIGhlaWdodDogODBweDtcXG4gICAgYm9yZGVyOiAycHggc29saWQgd2hpdGU7XFxuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgICAvKiBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoNTcsIDExMSwgMTExKTsgKi9cXG59XFxuXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG5cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTsgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcblxuXG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG5cbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcblxuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblxuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8IFwiXCIpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuXG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiB1cGRhdGVyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuXG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuXG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuXG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG5cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuXG4gIGNzcyArPSBvYmouY3NzO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBNYWtpbmcgdXNlIG9mIHBhcmVudCBzaWJsaW5nIHNlbGVjdG9yc1xuLy8gTGlzdGVuaW5nIHRvIGV2ZW50IG9uIGZ1bGwgZG9jdW1lbnQuXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XG4gIC8vICAgY29uc29sZS5sb2coZSk7XG4gIC8vICAgY29uc29sZS5sb2coZS50YXJnZXQubmV4dFNpYmxpbmcuaWQpO1xuICAvLyAgIElmIGV2ZW50IHRhcmdldCBoYXMgYSBzaWJsaW5nIGFuZFxuICAvLyAgIGl0cyBuYW1lIGlzICAndGFza1RpdGxlJywgYWN0IG9uIGl0LlxuICBpZiAoZS50YXJnZXQubmV4dFNpYmxpbmcgJiYgZS50YXJnZXQubmV4dFNpYmxpbmcuaWQgPT09ICd0YXNrVGl0bGUnKSB7XG4gICAgaWYgKGUudGFyZ2V0LmNoZWNrZWQpIHtcbiAgICAgIGUudGFyZ2V0Lm5leHRTaWJsaW5nLnN0eWxlLnNldFByb3BlcnR5KCd0ZXh0LWRlY29yYXRpb24nLCAnbGluZS10aHJvdWdoJyk7XG4gICAgICAvLyAgIGNvbnNvbGUubG9nKGUudGFyZ2V0Lm5leHRTaWJsaW5nLmlkKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZS50YXJnZXQubmV4dFNpYmxpbmcuc3R5bGUuc2V0UHJvcGVydHkoJ3RleHQtZGVjb3JhdGlvbicsICdub25lJyk7XG4gICAgfVxuICB9XG5cbiAgaWYgKGUudGFyZ2V0LmlkID09PSAndGFza0RlbCcpIHtcbiAgICAvLyBjb25zb2xlLmxvZyhlLnRhcmdldC5wYXJlbnROb2RlKTtcbiAgICBlLnRhcmdldC5wYXJlbnROb2RlLnJlbW92ZSgpO1xuICB9XG5cbiAgaWYgKGUudGFyZ2V0LmlkID09PSAndGFza0VkaXQnICYmIGUudGFyZ2V0LnZhbHVlID09PSAnRWRpdCcpIHtcbiAgICBlLnRhcmdldC52YWx1ZSA9ICdTYXZlJztcbiAgICBjb25zb2xlLmxvZyhlLnRhcmdldC5wcmV2aW91c1NpYmxpbmcudGV4dENvbnRlbnQpO1xuXG4gICAgY29uc3QgZWRpdFRhc2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgIGVkaXRUYXNrLnNldEF0dHJpYnV0ZSgndHlwZScsICd0ZXh0Jyk7XG4gICAgZWRpdFRhc2suc2V0QXR0cmlidXRlKCdpZCcsICd0YXNrVGl0bGUnKTtcbiAgICBlZGl0VGFzay52YWx1ZSA9XG4gICAgICBlLnRhcmdldC5wcmV2aW91c1NpYmxpbmcucHJldmlvdXNTaWJsaW5nLnByZXZpb3VzU2libGluZy50ZXh0Q29udGVudDtcbiAgICBlLnRhcmdldC5wcmV2aW91c1NpYmxpbmcucHJldmlvdXNTaWJsaW5nLnByZXZpb3VzU2libGluZy5yZXBsYWNlV2l0aChcbiAgICAgIGVkaXRUYXNrXG4gICAgKTtcblxuICAgIGNvbnN0IGVkaXREYXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgICBlZGl0RGF0ZS5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAnZGF0ZScpO1xuICAgIGVkaXREYXRlLnNldEF0dHJpYnV0ZSgnaWQnLCAndGFza0RhdGUnKTtcbiAgICBlZGl0RGF0ZS5zZXRBdHRyaWJ1dGUoXG4gICAgICAndmFsdWUnLFxuICAgICAgZS50YXJnZXQucHJldmlvdXNTaWJsaW5nLnByZXZpb3VzU2libGluZy50ZXh0Q29udGVudFxuICAgICk7XG4gICAgZS50YXJnZXQucHJldmlvdXNTaWJsaW5nLnByZXZpb3VzU2libGluZy5yZXBsYWNlV2l0aChlZGl0RGF0ZSk7XG5cbiAgICBjb25zdCBlZGl0UHJpbyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NlbGVjdCcpO1xuICAgIGVkaXRQcmlvLnNldEF0dHJpYnV0ZSgnbmFtZScsICdQcmlvcml0eScpO1xuICAgIGVkaXRQcmlvLnNldEF0dHJpYnV0ZSgnaWQnLCAncHJpb3JpdHknKTtcblxuICAgIGNvbnN0IHByaW9yaXR5TG93ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnb3B0aW9uJyk7XG4gICAgcHJpb3JpdHlMb3cuc2V0QXR0cmlidXRlKCd2YWx1ZScsICdMb3cnKTtcbiAgICBwcmlvcml0eUxvdy50ZXh0Q29udGVudCA9ICdMb3cnO1xuXG4gICAgY29uc3QgcHJpb3JpdHlNZWRpdW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdvcHRpb24nKTtcbiAgICBwcmlvcml0eU1lZGl1bS5zZXRBdHRyaWJ1dGUoJ3ZhbHVlJywgJ01lZGl1bScpO1xuICAgIHByaW9yaXR5TWVkaXVtLnRleHRDb250ZW50ID0gJ01lZGl1bSc7XG5cbiAgICBjb25zdCBwcmlvcml0eUhpZ2ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdvcHRpb24nKTtcbiAgICBwcmlvcml0eUhpZ2guc2V0QXR0cmlidXRlKCd2YWx1ZScsICdIaWdoJyk7XG4gICAgcHJpb3JpdHlIaWdoLnRleHRDb250ZW50ID0gJ0hpZ2gnO1xuXG4gICAgZWRpdFByaW8uYXBwZW5kKHByaW9yaXR5TG93LCBwcmlvcml0eU1lZGl1bSwgcHJpb3JpdHlIaWdoKTtcblxuICAgIGVkaXRQcmlvLnZhbHVlID0gZS50YXJnZXQucHJldmlvdXNTaWJsaW5nLnRleHRDb250ZW50O1xuXG4gICAgZS50YXJnZXQucHJldmlvdXNTaWJsaW5nLnJlcGxhY2VXaXRoKGVkaXRQcmlvKTtcbiAgfVxufSk7XG5cbi8vIGV4cG9ydCBkZWZhdWx0IHRhc2tDaGVjaztcbiIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsInZhciBzY3JpcHRVcmw7XG5pZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5nLmltcG9ydFNjcmlwdHMpIHNjcmlwdFVybCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5sb2NhdGlvbiArIFwiXCI7XG52YXIgZG9jdW1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcuZG9jdW1lbnQ7XG5pZiAoIXNjcmlwdFVybCAmJiBkb2N1bWVudCkge1xuXHRpZiAoZG9jdW1lbnQuY3VycmVudFNjcmlwdClcblx0XHRzY3JpcHRVcmwgPSBkb2N1bWVudC5jdXJyZW50U2NyaXB0LnNyY1xuXHRpZiAoIXNjcmlwdFVybCkge1xuXHRcdHZhciBzY3JpcHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIik7XG5cdFx0aWYoc2NyaXB0cy5sZW5ndGgpIHNjcmlwdFVybCA9IHNjcmlwdHNbc2NyaXB0cy5sZW5ndGggLSAxXS5zcmNcblx0fVxufVxuLy8gV2hlbiBzdXBwb3J0aW5nIGJyb3dzZXJzIHdoZXJlIGFuIGF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgeW91IG11c3Qgc3BlY2lmeSBhbiBvdXRwdXQucHVibGljUGF0aCBtYW51YWxseSB2aWEgY29uZmlndXJhdGlvblxuLy8gb3IgcGFzcyBhbiBlbXB0eSBzdHJpbmcgKFwiXCIpIGFuZCBzZXQgdGhlIF9fd2VicGFja19wdWJsaWNfcGF0aF9fIHZhcmlhYmxlIGZyb20geW91ciBjb2RlIHRvIHVzZSB5b3VyIG93biBsb2dpYy5cbmlmICghc2NyaXB0VXJsKSB0aHJvdyBuZXcgRXJyb3IoXCJBdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3NlclwiKTtcbnNjcmlwdFVybCA9IHNjcmlwdFVybC5yZXBsYWNlKC8jLiokLywgXCJcIikucmVwbGFjZSgvXFw/LiokLywgXCJcIikucmVwbGFjZSgvXFwvW15cXC9dKyQvLCBcIi9cIik7XG5fX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBzY3JpcHRVcmw7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5uYyA9IHVuZGVmaW5lZDsiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vdG9Eb1RvZ2dsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3RvRG9Ub2dnbGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3RvRG9Gb3JtLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vdG9Eb0Zvcm0uY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0ICcuL3RvRG9Gb3JtLmNzcyc7XG5cbmNvbnN0IHRhc2tJdGVtc0RpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xudGFza0l0ZW1zRGl2LmNsYXNzTGlzdC5hZGQoJ3Rhc2tJdGVtc0RpdicpO1xuXG5jb25zdCBmb3JtRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZm9ybScpO1xuZm9ybURpdi5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3F3ZXJ0Jyk7XG5cbi8vIGZpcnN0IGRpdlxuY29uc3QgZmlyc3RGb3JtRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5maXJzdEZvcm1EaXYuc2V0QXR0cmlidXRlKCdpZCcsICdmaXJzdEZvcm1EaXYnKTtcblxuY29uc3QgaW5wdXRUaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG5pbnB1dFRpdGxlLnNldEF0dHJpYnV0ZSgndHlwZScsICd0ZXh0Jyk7XG5pbnB1dFRpdGxlLnNldEF0dHJpYnV0ZSgncGxhY2Vob2xkZXInLCAnVGFzayBOYW1lJyk7XG5pbnB1dFRpdGxlLnNldEF0dHJpYnV0ZSgnaWQnLCAndGl0bGUnKTtcblxuY29uc3QgaW5wdXREYXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbmlucHV0RGF0ZS5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAnZGF0ZScpO1xuaW5wdXREYXRlLnNldEF0dHJpYnV0ZSgnaWQnLCAndGFza0RhdGUnKTtcblxuY29uc3QgZGF0ZVRvZGF5ID0gbmV3IERhdGUoKS50b0pTT04oKS5zbGljZSgwLCAxMCk7XG5pbnB1dERhdGUuc2V0QXR0cmlidXRlKCd2YWx1ZScsIGRhdGVUb2RheSk7XG5cbmNvbnN0IGlucHV0UHJpb3JpdHkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzZWxlY3QnKTtcbmlucHV0UHJpb3JpdHkuc2V0QXR0cmlidXRlKCduYW1lJywgJ1ByaW9yaXR5Jyk7XG5pbnB1dFByaW9yaXR5LnNldEF0dHJpYnV0ZSgnaWQnLCAncHJpb3JpdHknKTtcblxuY29uc3QgcHJpb3JpdHlMb3cgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdvcHRpb24nKTtcbnByaW9yaXR5TG93LnNldEF0dHJpYnV0ZSgndmFsdWUnLCAnTG93Jyk7XG5wcmlvcml0eUxvdy50ZXh0Q29udGVudCA9ICdMb3cnO1xuXG5jb25zdCBwcmlvcml0eU1lZGl1bSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ29wdGlvbicpO1xucHJpb3JpdHlNZWRpdW0uc2V0QXR0cmlidXRlKCd2YWx1ZScsICdNZWRpdW0nKTtcbnByaW9yaXR5TWVkaXVtLnRleHRDb250ZW50ID0gJ01lZGl1bSc7XG5cbmNvbnN0IHByaW9yaXR5SGlnaCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ29wdGlvbicpO1xucHJpb3JpdHlIaWdoLnNldEF0dHJpYnV0ZSgndmFsdWUnLCAnSGlnaCcpO1xucHJpb3JpdHlIaWdoLnRleHRDb250ZW50ID0gJ0hpZ2gnO1xuXG5pbnB1dFByaW9yaXR5LmFwcGVuZChwcmlvcml0eUxvdywgcHJpb3JpdHlNZWRpdW0sIHByaW9yaXR5SGlnaCk7XG5cbmNvbnN0IGZvcm1TdWJtaXRCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuZm9ybVN1Ym1pdEJ0bi5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAnc3VibWl0Jyk7XG5mb3JtU3VibWl0QnRuLnNldEF0dHJpYnV0ZSgndmFsdWUnLCAnQWRkJyk7XG5mb3JtU3VibWl0QnRuLnNldEF0dHJpYnV0ZSgnaWQnLCAnYWRkQnRuJyk7XG5cbmNvbnN0IGZvcm1DYW5jZWxCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuZm9ybUNhbmNlbEJ0bi5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAnYnV0dG9uJyk7XG5mb3JtQ2FuY2VsQnRuLnNldEF0dHJpYnV0ZSgndmFsdWUnLCAnQ2FuY2VsJyk7XG5mb3JtQ2FuY2VsQnRuLnNldEF0dHJpYnV0ZSgnaWQnLCAnY2FuY2VsQnRuJyk7XG5cbmZpcnN0Rm9ybURpdi5hcHBlbmQoXG4gIGlucHV0VGl0bGUsXG4gIGlucHV0RGF0ZSxcbiAgaW5wdXRQcmlvcml0eSxcbiAgZm9ybVN1Ym1pdEJ0bixcbiAgZm9ybUNhbmNlbEJ0blxuKTtcblxuZm9ybURpdi5hcHBlbmQoZmlyc3RGb3JtRGl2KTtcblxuZXhwb3J0IHtcbiAgZm9ybURpdixcbiAgZm9ybUNhbmNlbEJ0bixcbiAgZm9ybVN1Ym1pdEJ0bixcbiAgaW5wdXRUaXRsZSxcbiAgaW5wdXREYXRlLFxuICBpbnB1dFByaW9yaXR5LFxuICB0YXNrSXRlbXNEaXYsXG4gIGRhdGVUb2RheSxcbn07XG4iLCJpbXBvcnQgcGx1c0ljb25JbWcgZnJvbSAnLi9pbWFnZXMvcGx1cy5wbmcnO1xuaW1wb3J0ICcuL3RvRG9Ub2dnbGUuY3NzJztcbmltcG9ydCB7IGZvcm1EaXYsIGZvcm1DYW5jZWxCdG4sIGlucHV0VGl0bGUgfSBmcm9tICcuL3RvRG9Gb3JtJztcblxuY29uc3QgcGx1c0ljb25EaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbnBsdXNJY29uRGl2LnNldEF0dHJpYnV0ZSgnaWQnLCAncGx1c0ljb25EaXYnKTtcblxuY29uc3QgcGx1c0ljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKTtcbnBsdXNJY29uLnNldEF0dHJpYnV0ZSgnaWQnLCAncGx1c0ljb25JbWcnKTtcbnBsdXNJY29uLnNyYyA9IHBsdXNJY29uSW1nO1xuXG5mdW5jdGlvbiBzaG93Rm9ybSgpIHtcbiAgcGx1c0ljb25EaXYucmVtb3ZlQ2hpbGQocGx1c0ljb24pO1xuICBwbHVzSWNvbkRpdi5hcHBlbmRDaGlsZChmb3JtRGl2KTtcbiAgaW5wdXRUaXRsZS5mb2N1cygpO1xufVxuXG5wbHVzSWNvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHNob3dGb3JtKTtcblxuLy8gcGx1c0ljb25EaXYuYXBwZW5kQ2hpbGQocGx1c0ljb24pO1xucGx1c0ljb25EaXYuYXBwZW5kQ2hpbGQoZm9ybURpdik7XG5cbmZvcm1DYW5jZWxCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gIHBsdXNJY29uRGl2LnJlbW92ZUNoaWxkKGZvcm1EaXYpO1xuICBwbHVzSWNvbkRpdi5hcHBlbmRDaGlsZChwbHVzSWNvbik7XG59KTtcblxuZXhwb3J0IHsgcGx1c0ljb25EaXYsIHBsdXNJY29uIH07XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vdG9Eb0FkZC5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3RvRG9BZGQuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IHtcbiAgZm9ybURpdixcbiAgZm9ybVN1Ym1pdEJ0bixcbiAgaW5wdXRUaXRsZSxcbiAgaW5wdXREYXRlLFxuICBpbnB1dFByaW9yaXR5LFxuICBkYXRlVG9kYXksXG4gIHRhc2tJdGVtc0Rpdixcbn0gZnJvbSAnLi90b0RvRm9ybSc7XG5pbXBvcnQgeyBwbHVzSWNvbkRpdiwgcGx1c0ljb24gfSBmcm9tICcuL3RvRG9Ub2dnbGUnO1xuaW1wb3J0ICcuL3RvRG9BZGQuY3NzJztcblxuY2xhc3MgVGFzayB7XG4gIGNvbnN0cnVjdG9yKHRhc2tOYW1lLCB0YXNrRGF0ZSwgdGFza1ByaW9yaXR5KSB7XG4gICAgdGhpcy50YXNrTmFtZSA9IHRhc2tOYW1lO1xuICAgIHRoaXMudGFza0RhdGUgPSB0YXNrRGF0ZTtcbiAgICB0aGlzLnRhc2tQcmlvcml0eSA9IHRhc2tQcmlvcml0eTtcbiAgfVxuXG4gIGFkZFRvRG9tKCkge1xuICAgIGNvbnN0IHRhc2tEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICB0YXNrRGl2LmNsYXNzTGlzdC5hZGQoJ3Rhc2tEaXYnKTtcblxuICAgIGNvbnN0IHRhc2tEb25lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgICB0YXNrRG9uZS5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAnY2hlY2tib3gnKTtcbiAgICB0YXNrRG9uZS5zZXRBdHRyaWJ1dGUoJ3ZhbHVlJywgJ2RvbmUnKTtcbiAgICB0YXNrRG9uZS5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3Rhc2tEb25lJyk7XG5cbiAgICBjb25zdCB0YXNrVGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG4gICAgdGFza1RpdGxlLnRleHRDb250ZW50ID0gdGhpcy50YXNrTmFtZTtcbiAgICB0YXNrVGl0bGUuc2V0QXR0cmlidXRlKCdpZCcsICd0YXNrVGl0bGUnKTtcblxuICAgIGNvbnN0IHRhc2tEYXRlUCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbiAgICB0YXNrRGF0ZVAudGV4dENvbnRlbnQgPSB0aGlzLnRhc2tEYXRlO1xuICAgIHRhc2tEYXRlUC5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3Rhc2tEYXRlUCcpO1xuXG4gICAgY29uc3QgdGFza1ByaVAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG4gICAgdGFza1ByaVAudGV4dENvbnRlbnQgPSB0aGlzLnRhc2tQcmlvcml0eTtcbiAgICB0YXNrUHJpUC5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3Rhc2tQcmlQJyk7XG5cbiAgICBjb25zdCB0YXNrRGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgICB0YXNrRGVsLnNldEF0dHJpYnV0ZSgndHlwZScsICdidXR0b24nKTtcbiAgICB0YXNrRGVsLnNldEF0dHJpYnV0ZSgndmFsdWUnLCAnRGVsZXRlJyk7XG4gICAgdGFza0RlbC5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3Rhc2tEZWwnKTtcbiAgICB0YXNrRGVsLmNsYXNzTGlzdC5hZGQoJ2J1dHRvbnMnKTtcblxuICAgIGNvbnN0IHRhc2tFZGl0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgICB0YXNrRWRpdC5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAnYnV0dG9uJyk7XG4gICAgdGFza0VkaXQuc2V0QXR0cmlidXRlKCd2YWx1ZScsICdFZGl0Jyk7XG4gICAgdGFza0VkaXQuc2V0QXR0cmlidXRlKCdpZCcsICd0YXNrRWRpdCcpO1xuICAgIHRhc2tFZGl0LmNsYXNzTGlzdC5hZGQoJ2J1dHRvbnMnKTtcblxuICAgIHRhc2tEaXYuYXBwZW5kKHRhc2tEb25lLCB0YXNrVGl0bGUsIHRhc2tEYXRlUCwgdGFza1ByaVAsIHRhc2tFZGl0LCB0YXNrRGVsKTtcblxuICAgIHRhc2tJdGVtc0Rpdi5hcHBlbmQodGFza0Rpdik7XG4gIH1cbn1cblxuZnVuY3Rpb24gcmVzZXRGb3JtKCkge1xuICBpbnB1dFRpdGxlLnZhbHVlID0gJyc7XG4gIGlucHV0RGF0ZS52YWx1ZSA9IGRhdGVUb2RheTtcbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3ByaW9yaXR5JykudmFsdWUgPSAnTG93Jztcbn1cblxuZnVuY3Rpb24gc2hvd0FkZEljb24oKSB7XG4gIHBsdXNJY29uRGl2LnJlbW92ZUNoaWxkKGZvcm1EaXYpO1xuICBwbHVzSWNvbkRpdi5hcHBlbmRDaGlsZChwbHVzSWNvbik7XG59XG5cbmZ1bmN0aW9uIGFkZFRvRG8oKSB7XG4gIGNvbnN0IHRhc2tOYW1lID0gaW5wdXRUaXRsZS52YWx1ZTtcbiAgbGV0IHRhc2tEYXRlID0gaW5wdXREYXRlLnZhbHVlO1xuICBjb25zdCBwcmlvcml0eUlkID0gaW5wdXRQcmlvcml0eS5pZDtcbiAgY29uc3QgdGFza1ByaW9yaXR5ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQocHJpb3JpdHlJZCkudmFsdWU7XG5cbiAgaWYgKCF0YXNrRGF0ZSkge1xuICAgIHRhc2tEYXRlID0gJ05vIGR1ZSBkYXRlJztcbiAgfVxuXG4gIC8vIGlmICghdGFza1ByaW9yaXR5KSB7XG4gIC8vICAgdGFza1ByaW9yaXR5ID0gJ05vbmUnO1xuICAvLyB9XG5cbiAgaWYgKHRhc2tOYW1lKSB7XG4gICAgY29uc3QgYWRkVGFzayA9IG5ldyBUYXNrKHRhc2tOYW1lLCB0YXNrRGF0ZSwgdGFza1ByaW9yaXR5KTtcbiAgICBhZGRUYXNrLmFkZFRvRG9tKCk7XG4gICAgcmVzZXRGb3JtKCk7XG4gICAgc2hvd0FkZEljb24oKTtcbiAgfVxuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gIGNvbnNvbGUubG9nKHRhc2tOYW1lLCB0YXNrRGF0ZSwgdGFza1ByaW9yaXR5KTtcbn1cblxuZm9ybURpdi5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCAoZSkgPT4ge1xuICBlLnByZXZlbnREZWZhdWx0KCk7XG4gIGFkZFRvRG8oKTtcbn0pO1xuXG5mb3JtU3VibWl0QnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcbiAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICBhZGRUb0RvKCk7XG59KTtcblxuLy8gZHVtbXkgZGF0YVxuY29uc3QgbXlUYXNrID0gbmV3IFRhc2soXCJIZWxsbyEgSSdtIGEgdGFzay5cIiwgZGF0ZVRvZGF5LCAnSGlnaCcpO1xubXlUYXNrLmFkZFRvRG9tKCk7XG5cbmV4cG9ydCBkZWZhdWx0IHRhc2tJdGVtc0RpdjtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9pbmRleC5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2luZGV4LmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCB7IHBsdXNJY29uRGl2IH0gZnJvbSAnLi90b0RvVG9nZ2xlJztcbmltcG9ydCB0YXNrSXRlbXNEaXYgZnJvbSAnLi90b0RvQWRkJztcbmltcG9ydCAnLi9pbmRleC5jc3MnO1xuaW1wb3J0ICcuL3RvRG9FZGl0JztcblxuY29uc3QgYm9keSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2JvZHknKTtcblxuY29uc3QgaDEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMScpO1xuaDEudGV4dENvbnRlbnQgPSAnVG9kbyBBcHAhJztcblxuYm9keS5hcHBlbmRDaGlsZChoMSk7XG5ib2R5LmFwcGVuZENoaWxkKHBsdXNJY29uRGl2KTtcbmJvZHkuYXBwZW5kQ2hpbGQodGFza0l0ZW1zRGl2KTtcbiJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZSIsInNvdXJjZVJvb3QiLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsIm9wdGlvbnMiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJuZXh0U2libGluZyIsImNoZWNrZWQiLCJzZXRQcm9wZXJ0eSIsInZhbHVlIiwiY29uc29sZSIsImxvZyIsInByZXZpb3VzU2libGluZyIsInRleHRDb250ZW50IiwiZWRpdFRhc2siLCJyZXBsYWNlV2l0aCIsImVkaXREYXRlIiwiZWRpdFByaW8iLCJwcmlvcml0eUxvdyIsInByaW9yaXR5TWVkaXVtIiwicHJpb3JpdHlIaWdoIiwiYXBwZW5kIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm4iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsImciLCJnbG9iYWxUaGlzIiwiRnVuY3Rpb24iLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwic2NyaXB0VXJsIiwiaW1wb3J0U2NyaXB0cyIsImxvY2F0aW9uIiwiY3VycmVudFNjcmlwdCIsInNyYyIsInNjcmlwdHMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsInJlcGxhY2UiLCJwIiwibmMiLCJ0YXNrSXRlbXNEaXYiLCJjbGFzc0xpc3QiLCJhZGQiLCJmb3JtRGl2IiwiZmlyc3RGb3JtRGl2IiwiaW5wdXRUaXRsZSIsImlucHV0RGF0ZSIsImRhdGVUb2RheSIsIkRhdGUiLCJ0b0pTT04iLCJzbGljZSIsImlucHV0UHJpb3JpdHkiLCJmb3JtU3VibWl0QnRuIiwiZm9ybUNhbmNlbEJ0biIsInBsdXNJY29uRGl2IiwicGx1c0ljb24iLCJmb2N1cyIsIlRhc2siLCJjb25zdHJ1Y3RvciIsInRhc2tOYW1lIiwidGFza0RhdGUiLCJ0YXNrUHJpb3JpdHkiLCJhZGRUb0RvbSIsInRhc2tEaXYiLCJ0YXNrRG9uZSIsInRhc2tUaXRsZSIsInRhc2tEYXRlUCIsInRhc2tQcmlQIiwidGFza0RlbCIsInRhc2tFZGl0IiwiYWRkVG9EbyIsInByaW9yaXR5SWQiLCJnZXRFbGVtZW50QnlJZCIsInByZXZlbnREZWZhdWx0IiwiYm9keSIsImgxIl0sInNvdXJjZVJvb3QiOiIifQ==
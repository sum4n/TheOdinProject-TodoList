(()=>{var t={424:(t,e,n)=>{"use strict";n.d(e,{Z:()=>s});var r=n(537),i=n.n(r),o=n(645),a=n.n(o)()(i());a.push([t.id,"body{\n    background-color: #073A41;\n    color: white;\n}\n\nh1 {\n    text-align: center;\n}","",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;IACI,yBAAyB;IACzB,YAAY;AAChB;;AAEA;IACI,kBAAkB;AACtB",sourcesContent:["body{\n    background-color: #073A41;\n    color: white;\n}\n\nh1 {\n    text-align: center;\n}"],sourceRoot:""}]);const s=a},486:(t,e,n)=>{"use strict";n.d(e,{Z:()=>s});var r=n(537),i=n.n(r),o=n(645),a=n.n(o)()(i());a.push([t.id,".taskDiv {\n    border: 2px solid white;\n    border-radius: 8px;\n    display: flex;\n    align-items: center;\n    gap: 20px;\n    margin-top: 8px;\n    height: 80px\n}\n\n#taskDone {\n    margin: 0px 0px 0px 4px;\n}\n\n#taskTitle {\n    margin-left: -10px;\n    height: 40px;\n    flex-grow: 4;\n    display: flex;\n    align-items: center;\n    border: none;\n    border-radius: 4px;\n}\n\n#taskDateP {\n    width: 130px;\n    /* border: 1px solid white; */\n    text-align: center;\n}\n\n#taskPriP {\n    width: 100px;\n    /* border: 1px solid white; */\n    text-align: center;\n}\n\n.buttons {\n    height: 40px;\n    width: 80px;\n    background-color: greenyellow;\n    border: none;\n    border-radius: 4px;\n    font-weight: bold;\n}\n\n#taskEdit {\n    background-color: greenyellow;\n}\n\n#taskDel {\n    margin-right: 15px;\n    background-color: red;\n}\n\n#taskCancel {\n    margin-right: 15px;\n    background-color: yellow;\n}","",{version:3,sources:["webpack://./src/toDoAdd.css"],names:[],mappings:"AAAA;IACI,uBAAuB;IACvB,kBAAkB;IAClB,aAAa;IACb,mBAAmB;IACnB,SAAS;IACT,eAAe;IACf;AACJ;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,kBAAkB;IAClB,YAAY;IACZ,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,6BAA6B;IAC7B,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,6BAA6B;IAC7B,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,6BAA6B;IAC7B,YAAY;IACZ,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA;IACI,6BAA6B;AACjC;;AAEA;IACI,kBAAkB;IAClB,qBAAqB;AACzB;;AAEA;IACI,kBAAkB;IAClB,wBAAwB;AAC5B",sourcesContent:[".taskDiv {\n    border: 2px solid white;\n    border-radius: 8px;\n    display: flex;\n    align-items: center;\n    gap: 20px;\n    margin-top: 8px;\n    height: 80px\n}\n\n#taskDone {\n    margin: 0px 0px 0px 4px;\n}\n\n#taskTitle {\n    margin-left: -10px;\n    height: 40px;\n    flex-grow: 4;\n    display: flex;\n    align-items: center;\n    border: none;\n    border-radius: 4px;\n}\n\n#taskDateP {\n    width: 130px;\n    /* border: 1px solid white; */\n    text-align: center;\n}\n\n#taskPriP {\n    width: 100px;\n    /* border: 1px solid white; */\n    text-align: center;\n}\n\n.buttons {\n    height: 40px;\n    width: 80px;\n    background-color: greenyellow;\n    border: none;\n    border-radius: 4px;\n    font-weight: bold;\n}\n\n#taskEdit {\n    background-color: greenyellow;\n}\n\n#taskDel {\n    margin-right: 15px;\n    background-color: red;\n}\n\n#taskCancel {\n    margin-right: 15px;\n    background-color: yellow;\n}"],sourceRoot:""}]);const s=a},145:(t,e,n)=>{"use strict";n.d(e,{Z:()=>s});var r=n(537),i=n.n(r),o=n(645),a=n.n(o)()(i());a.push([t.id,"#firstFormDiv {\n    display: flex;\n    justify-content: space-between;\n    gap: 20px;\n    /* border: 2px solid yellow; */\n    height: 80px;\n    align-items: center;\n    flex-wrap: wrap;\n    flex-grow: 8;\n}\n\n#title {\n    height: 40px;\n    /* width: 400px; */\n    border: none;\n    margin-left: 15px;\n    border-radius: 4px;\n    /* font-size: 24px; */\n    flex-grow: 4;\n}\n\n#taskDate {\n    height: 40px;\n    border-radius: 4px;\n    border: none;\n    /* font-size: 24px; */\n    /* flex-grow: 1; */\n}\n\n#priority {\n    height: 40px;\n    border: none;\n    border-radius: 4px;\n    /* flex-grow: 1; */\n}\n\n#addBtn {\n    height: 40px;\n    width: 80px;\n    background-color: greenyellow;\n    border: none;\n    border-radius: 4px;\n    font-weight: bold;\n}\n\n#cancelBtn {\n    height: 40px;\n    width: 80px;\n    margin-right: 15px;\n    background-color: red;\n    border: none;\n    border-radius: 4px;\n    font-weight: bold;\n}","",{version:3,sources:["webpack://./src/toDoForm.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,8BAA8B;IAC9B,SAAS;IACT,8BAA8B;IAC9B,YAAY;IACZ,mBAAmB;IACnB,eAAe;IACf,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,kBAAkB;IAClB,YAAY;IACZ,iBAAiB;IACjB,kBAAkB;IAClB,qBAAqB;IACrB,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,kBAAkB;IAClB,YAAY;IACZ,qBAAqB;IACrB,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,kBAAkB;IAClB,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,6BAA6B;IAC7B,YAAY;IACZ,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,qBAAqB;IACrB,YAAY;IACZ,kBAAkB;IAClB,iBAAiB;AACrB",sourcesContent:["#firstFormDiv {\n    display: flex;\n    justify-content: space-between;\n    gap: 20px;\n    /* border: 2px solid yellow; */\n    height: 80px;\n    align-items: center;\n    flex-wrap: wrap;\n    flex-grow: 8;\n}\n\n#title {\n    height: 40px;\n    /* width: 400px; */\n    border: none;\n    margin-left: 15px;\n    border-radius: 4px;\n    /* font-size: 24px; */\n    flex-grow: 4;\n}\n\n#taskDate {\n    height: 40px;\n    border-radius: 4px;\n    border: none;\n    /* font-size: 24px; */\n    /* flex-grow: 1; */\n}\n\n#priority {\n    height: 40px;\n    border: none;\n    border-radius: 4px;\n    /* flex-grow: 1; */\n}\n\n#addBtn {\n    height: 40px;\n    width: 80px;\n    background-color: greenyellow;\n    border: none;\n    border-radius: 4px;\n    font-weight: bold;\n}\n\n#cancelBtn {\n    height: 40px;\n    width: 80px;\n    margin-right: 15px;\n    background-color: red;\n    border: none;\n    border-radius: 4px;\n    font-weight: bold;\n}"],sourceRoot:""}]);const s=a},657:(t,e,n)=>{"use strict";n.d(e,{Z:()=>s});var r=n(537),i=n.n(r),o=n(645),a=n.n(o)()(i());a.push([t.id,"img {\n    height: 80px;\n    width: 80px;\n}\n\n#plusIconDiv {\n    height: 80px;\n    border: 2px solid white;\n    border-radius: 8px;\n    text-align: center;\n    /* background-color: rgb(57, 111, 111); */\n}\n\n","",{version:3,sources:["webpack://./src/toDoToggle.css"],names:[],mappings:"AAAA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,YAAY;IACZ,uBAAuB;IACvB,kBAAkB;IAClB,kBAAkB;IAClB,yCAAyC;AAC7C",sourcesContent:["img {\n    height: 80px;\n    width: 80px;\n}\n\n#plusIconDiv {\n    height: 80px;\n    border: 2px solid white;\n    border-radius: 8px;\n    text-align: center;\n    /* background-color: rgb(57, 111, 111); */\n}\n\n"],sourceRoot:""}]);const s=a},645:t=>{"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",r=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),r&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),r&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,r,i,o){"string"==typeof t&&(t=[[null,t,void 0]]);var a={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(a[c]=!0)}for(var l=0;l<t.length;l++){var A=[].concat(t[l]);r&&a[A[0]]||(void 0!==o&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=o),n&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=n):A[2]=n),i&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=i):A[4]="".concat(i)),e.push(A))}},e}},537:t=>{"use strict";t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(i," */"),a=n.sources.map((function(t){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(t," */")}));return[e].concat(a).concat([o]).join("\n")}return[e].join("\n")}},379:t=>{"use strict";var e=[];function n(t){for(var n=-1,r=0;r<e.length;r++)if(e[r].identifier===t){n=r;break}return n}function r(t,r){for(var o={},a=[],s=0;s<t.length;s++){var c=t[s],l=r.base?c[0]+r.base:c[0],A=o[l]||0,d="".concat(l," ").concat(A);o[l]=A+1;var u=n(d),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var g=i(p,r);r.byIndex=s,e.splice(s,0,{identifier:d,updater:g,references:1})}a.push(d)}return a}function i(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,i){var o=r(t=t||[],i=i||{});return function(t){t=t||[];for(var a=0;a<o.length;a++){var s=n(o[a]);e[s].references--}for(var c=r(t,i),l=0;l<o.length;l++){var A=n(o[l]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}o=c}}},569:t=>{"use strict";var e={};t.exports=function(t,n){var r=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:t=>{"use strict";t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{"use strict";t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{"use strict";t.exports=function(t){var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var i=void 0!==n.layer;i&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,i&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{"use strict";t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},884:()=>{document.addEventListener("click",(t=>{if(t.target.nextSibling&&"taskTitle"===t.target.nextSibling.id){const e={taskDone:t.target.checked,name:t.target.nextSibling.textContent,date:t.target.nextSibling.nextSibling.textContent,pri:t.target.nextSibling.nextSibling.nextSibling.textContent,keyName:t.target.parentNode.id};t.target.checked?(t.target.nextSibling.style.setProperty("text-decoration","line-through"),localStorage.setItem(t.target.parentNode.id,JSON.stringify(e)),t.target.nextSibling.nextSibling.nextSibling.nextSibling.disabled=!0):(t.target.nextSibling.style.setProperty("text-decoration","none"),localStorage.setItem(t.target.parentNode.id,JSON.stringify(e)),t.target.nextSibling.nextSibling.nextSibling.nextSibling.disabled=!1)}if("taskDel"===t.target.id&&"Delete"===t.target.value&&(t.target.parentNode.remove(),localStorage.removeItem(t.target.parentNode.id)),"taskEdit"===t.target.id&&"Edit"===t.target.value){t.target.value="Save",t.target.nextSibling.value="Cancel",t.target.nextSibling.id="taskCancel",t.target.parentNode.firstChild.disabled=!0;const e=document.createElement("input");e.setAttribute("type","text"),e.setAttribute("id","taskTitle"),e.value=t.target.previousSibling.previousSibling.previousSibling.textContent,t.target.previousSibling.previousSibling.previousSibling.replaceWith(e),e.focus();const n=document.createElement("input");n.setAttribute("type","date"),n.setAttribute("id","taskDate"),n.setAttribute("value",t.target.previousSibling.previousSibling.textContent),t.target.previousSibling.previousSibling.replaceWith(n);const r=document.createElement("select");r.setAttribute("name","Priority"),r.setAttribute("id","priority");const i=document.createElement("option");i.setAttribute("value","Low"),i.textContent="Low";const o=document.createElement("option");o.setAttribute("value","Medium"),o.textContent="Medium";const a=document.createElement("option");a.setAttribute("value","High"),a.textContent="High",r.append(i,o,a),r.value=t.target.previousSibling.textContent,t.target.previousSibling.replaceWith(r)}else if("taskEdit"===t.target.id&&"Save"===t.target.value){const e=t.target.previousSibling.previousSibling.previousSibling.value,n=t.target.previousSibling.previousSibling.value,r=t.target.previousSibling.value,i=t.target.parentNode.id,o={taskDone:!1,name:e,date:n,pri:r,keyName:i};localStorage.setItem(i,JSON.stringify(o)),document.location.reload()}"taskCancel"===t.target.id&&"Cancel"===t.target.value&&document.location.reload()}))}},e={};function n(r){var i=e[r];if(void 0!==i)return i.exports;var o=e[r]={id:r,exports:{}};return t[r](o,o.exports,n),o.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t;n.g.importScripts&&(t=n.g.location+"");var e=n.g.document;if(!t&&e&&(e.currentScript&&(t=e.currentScript.src),!t)){var r=e.getElementsByTagName("script");r.length&&(t=r[r.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=t})(),n.nc=void 0,(()=>{"use strict";const t=n.p+"4e3d60cd93c0f851f657.png";var e=n(379),r=n.n(e),i=n(795),o=n.n(i),a=n(569),s=n.n(a),c=n(565),l=n.n(c),A=n(216),d=n.n(A),u=n(589),p=n.n(u),g=n(657),b={};b.styleTagTransform=p(),b.setAttributes=l(),b.insert=s().bind(null,"head"),b.domAPI=o(),b.insertStyleElement=d(),r()(g.Z,b),g.Z&&g.Z.locals&&g.Z.locals;var m=n(145),x={};x.styleTagTransform=p(),x.setAttributes=l(),x.insert=s().bind(null,"head"),x.domAPI=o(),x.insertStyleElement=d(),r()(m.Z,x),m.Z&&m.Z.locals&&m.Z.locals;const h=document.createElement("div");h.classList.add("taskItemsDiv");const C=document.createElement("form");C.setAttribute("id","qwert");const v=document.createElement("div");v.setAttribute("id","firstFormDiv");const B=document.createElement("input");B.setAttribute("type","text"),B.setAttribute("placeholder","Task Name"),B.setAttribute("id","title");const f=document.createElement("input");f.setAttribute("type","date"),f.setAttribute("id","taskDate");const k=(new Date).toJSON().slice(0,10);f.setAttribute("value",k);const I=document.createElement("select");I.setAttribute("name","Priority"),I.setAttribute("id","priority");const y=document.createElement("option");y.setAttribute("value","Low"),y.textContent="Low";const w=document.createElement("option");w.setAttribute("value","Medium"),w.textContent="Medium";const S=document.createElement("option");S.setAttribute("value","High"),S.textContent="High",I.append(y,w,S);const E=document.createElement("input");E.setAttribute("type","submit"),E.setAttribute("value","Add"),E.setAttribute("id","addBtn");const Y=document.createElement("input");Y.setAttribute("type","button"),Y.setAttribute("value","Cancel"),Y.setAttribute("id","cancelBtn"),v.append(B,f,I,E,Y),C.append(v);const D=document.createElement("div");D.setAttribute("id","plusIconDiv");const Z=document.createElement("img");Z.setAttribute("id","plusIconImg"),Z.src=t,Z.addEventListener("click",(function(){D.removeChild(Z),D.appendChild(C),B.focus()})),D.appendChild(C),Y.addEventListener("click",(()=>{D.removeChild(C),D.appendChild(Z)}));var T=n(486),N={};N.styleTagTransform=p(),N.setAttributes=l(),N.insert=s().bind(null,"head"),N.domAPI=o(),N.insertStyleElement=d(),r()(T.Z,N),T.Z&&T.Z.locals&&T.Z.locals;class P{constructor(t,e,n,r,i){this.taskDone=t,this.taskName=e,this.taskDate=n,this.taskPriority=r,this.keyName=i}addToDom(){const t=document.createElement("div");t.classList.add("taskDiv"),t.setAttribute("id",this.keyName);const e=document.createElement("input");e.setAttribute("type","checkbox"),e.checked=this.taskDone,e.setAttribute("id","taskDone");const n=document.createElement("p");n.textContent=this.taskName,n.setAttribute("id","taskTitle");const r=document.createElement("p");r.textContent=this.taskDate,r.setAttribute("id","taskDateP");const i=document.createElement("p");i.textContent=this.taskPriority,i.setAttribute("id","taskPriP");const o=document.createElement("input");o.setAttribute("type","button"),o.setAttribute("value","Delete"),o.setAttribute("id","taskDel"),o.classList.add("buttons");const a=document.createElement("input");a.setAttribute("type","button"),a.setAttribute("value","Edit"),a.setAttribute("id","taskEdit"),a.classList.add("buttons"),e.checked&&(n.style.setProperty("text-decoration","line-through"),a.disabled=!0),t.append(e,n,r,i,a,o),h.append(t)}}function L(){const t=B.value,e=f.value,n=I.id,r=document.getElementById(n).value,i=Date.now();t&&(new P(!1,t,e,r,i).addToDom(),function(t,e,n,r,i){const o={taskDone:!1,name:e,date:n,pri:r,keyName:i};localStorage.setItem(i,JSON.stringify(o))}(0,t,e,r,i),B.value="",f.value=k,document.getElementById("priority").value="Low")}C.addEventListener("submit",(t=>{t.preventDefault(),L()})),E.addEventListener("click",(t=>{t.preventDefault(),L(),B.focus()})),localStorage.length>0&&Object.keys(localStorage).sort().forEach((t=>{const e=JSON.parse(localStorage.getItem(t));new P(e.taskDone,e.name,e.date,e.pri,e.keyName).addToDom()}));const j=h;var M=n(424),O={};O.styleTagTransform=p(),O.setAttributes=l(),O.insert=s().bind(null,"head"),O.domAPI=o(),O.insertStyleElement=d(),r()(M.Z,O),M.Z&&M.Z.locals&&M.Z.locals,n(884);const q=document.querySelector("body"),W=document.createElement("h1");W.textContent="Todo App!",q.appendChild(W),q.appendChild(D),q.appendChild(j),B.focus()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,